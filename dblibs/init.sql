CREATE SEQUENCE ACCOMODATION_SEQ START WITH 1
INCREMENT BY 1;

CREATE TABLE "ACCOMODATION"
(
  ID_ACC NUMBER NOT NULL PRIMARY KEY,
  ID_HOTEL NUMBER NOT NULL,
  PRICE NUMBER NOT NULL,
  QUANTITY NUMBER,
  TYPE VARCHAR2(50)
);

CREATE TRIGGER ACCOMODATION_SEQ
BEFORE INSERT ON ACCOMODATION FOR EACH ROW
  BEGIN

    IF :NEW.ID_ACC IS NULL THEN
      SELECT ACCOMODATION_seq.NEXTVAL
      INTO :NEW.ID_ACC
      FROM dual;
    END IF;
  END;
/


CREATE SEQUENCE CONFIRM_SEQ START WITH 1
INCREMENT BY 1;

CREATE TABLE CONFIRM_EMAILS
(
  ID_CE NUMBER NOT NULL PRIMARY KEY,
  ID_USER NUMBER,
  CONFIRM_HASH VARCHAR2(128) NOT NULL,
  DATE_CONFIRM DATE NOT NULL
);

CREATE TRIGGER CONFIRM_SEQ
BEFORE INSERT ON CONFIRM_EMAILS FOR EACH ROW
  BEGIN

    IF :NEW.ID_CE IS NULL THEN
      SELECT CONFIRM_SEQ.NEXTVAL
      INTO :NEW.ID_CE
      FROM dual;
    END IF;
  END;
/


CREATE SEQUENCE ORDER_SEQ START WITH 1
INCREMENT BY 1;

CREATE TABLE "ORDER"
(
  ID_ORDER NUMBER NOT NULL PRIMARY KEY,
  ID_USER NUMBER NOT NULL,
  ID_SM NUMBER NOT NULL,
  DATE_ORDER DATE NOT NULL,
  ID_ACC NUMBER NOT NULL,
  PRICE NUMBER NOT NULL,
  START_DATE DATE NOT NULL,
  END_DATE DATE NOT NULL,
  ID_PC NUMBER NOT NULL ,
  DISCOUNT NUMBER
);

CREATE TRIGGER ORDER_SEQ
BEFORE INSERT ON ORDER FOR EACH ROW
  BEGIN

    IF :NEW.ID_ORDER IS NULL THEN
      SELECT ORDER_SEQ.NEXTVAL
      INTO :NEW.ID_ORDER
      FROM dual;
    END IF;
  END;
/


CREATE SEQUENCE DR_SEQ START WITH 1
INCREMENT BY 1;

CREATE TABLE "DISCOUNTRULE"
(
  ID_DC NUMBER NOT NULL PRIMARY KEY,
  NAME_DC VARCHAR2(12) NOT NULL,
  DISCOUNT_VALUE NUMBER NOT NULL
);

CREATE TRIGGER DR_SEQ
BEFORE INSERT ON DISCOUNTRULE FOR EACH ROW
  BEGIN

    IF :NEW.ID_DC IS NULL THEN
      SELECT DR_SEQ.NEXTVAL
      INTO :NEW.ID_DC
      FROM dual;
    END IF;
  END;
/



CREATE SEQUENCE HOTEL_SEQ START WITH 1
INCREMENT BY 1;

CREATE TABLE "HOTEL"
(
  ID_HOTEL NUMBER NOT NULL PRIMARY KEY,
  NAME_H VARCHAR2(20) NOT NULL,
  LOC_LAT NUMBER,
  LOC_LNG NUMBER,
  CATEGORY NUMBER,
  ID_SM NUMBER NOT NULL
);

CREATE TRIGGER HOTEL_SEQ
BEFORE INSERT ON HOTEL FOR EACH ROW
  BEGIN

    IF :NEW.ID_HOTEL IS NULL THEN
      SELECT HOTEL_SEQ.NEXTVAL
      INTO :NEW.ID_HOTEL
      FROM dual;
    END IF;
  END;
/




CREATE SEQUENCE PROMOCODE_SEQ START WITH 1
INCREMENT BY 1;

CREATE TABLE "PROMOCODE"
(
  ID_PC NUMBER NOT NULL PRIMARY KEY,
  CODE VARCHAR2(20) NOT NULL,
  START_DATE DATE NOT NULL,
  END_DATE DATE NOT NULL,
  DISCOUNT NUMBER NOT NULL,
  ISUSED SMALLINT
);

CREATE TRIGGER PROMOCODE_SEQ
BEFORE INSERT ON PROMOCODE FOR EACH ROW
  BEGIN

    IF :NEW.ID_PC IS NULL THEN
      SELECT PROMOCODE_SEQ.NEXTVAL
      INTO :NEW.ID_PC
      FROM dual;
    END IF;
  END;
/


CREATE SEQUENCE USERS_SEQ START WITH 1
INCREMENT BY 1;

CREATE TABLE "USERS"
(
  ID_USER NUMBER NOT NULL PRIMARY KEY,
  EMAIL VARCHAR2(50) NOT NULL,
  PSWD VARCHAR2(32) NOT NULL,
  USERNAME VARCHAR2(20) NOT NULL,
  CONFIRM_REGISTER NUMBER NOT NULL,
  ID_UT NUMBER NOT NULL,
  IS_BLOCKED NUMBER NOT NULL,
  ID_DC NUMBER,
  ID_CE NUMBER
);

CREATE TRIGGER USERS_SEQ
BEFORE INSERT ON USERS FOR EACH ROW
BEGIN

IF :NEW.ID_USER IS NULL THEN
SELECT USERS_seq.NEXTVAL
INTO :NEW.ID_USER
FROM dual;
END IF;
END;
/


CREATE TABLE USERTYPE
(
  ID_UT NUMBER NOT NULL PRIMARY KEY,
  NAME_T VARCHAR2(10) NOT NULL
)
;


CREATE SEQUENCE SM_SEQ START WITH 1
INCREMENT BY 1;

CREATE TABLE SM
(
  ID_SM NUMBER NOT NULL PRIMARY KEY,
  ID_USER NUMBER,
  COMMISSION NUMBER
);

CREATE TRIGGER SM_SEQ
BEFORE INSERT ON SM FOR EACH ROW
  BEGIN

    IF :NEW.ID_SM IS NULL THEN
      SELECT SM_seq.NEXTVAL
      INTO :NEW.ID_SM
      FROM dual;
    END IF;
  END;
/


ALTER TABLE "ACCOMODATION" ADD FOREIGN KEY ( ID_HOTEL ) REFERENCES "HOTEL" ( ID_HOTEL );
ALTER TABLE CONFIRM_EMAILS ADD FOREIGN KEY ( ID_USER ) REFERENCES "USERS" ( ID_USER );


ALTER TABLE "ORDER" ADD FOREIGN KEY ( ID_PC ) REFERENCES "PROMOCODE" ( ID_PC );
ALTER TABLE "ORDER" ADD FOREIGN KEY ( ID_USER ) REFERENCES "USERS" ( ID_USER );
ALTER TABLE "ORDER" ADD FOREIGN KEY (ID_ACC) REFERENCES "ACCOMODATION" (ID_ACC);
ALTER TABLE "ORDER" ADD FOREIGN KEY (ID_SM) REFERENCES "SM" (ID_SM);

ALTER TABLE "USERS" ADD FOREIGN KEY ( ID_DC ) REFERENCES "DISCOUNTRULE" ( ID_DC );
ALTER TABLE "USERS" ADD FOREIGN KEY (ID_UT) REFERENCES "USERTYPE" (ID_UT);
ALTER TABLE "USERS" ADD FOREIGN KEY (ID_DC) REFERENCES "DISCOUNTRULE"(ID_DC);

ALTER TABLE "HOTEL" ADD FOREIGN KEY (ID_SM) REFERENCES "SM" (ID_SM);


INSERT INTO USERTYPE (ID_UT, NAME_T) VALUES (1,'customer');
INSERT INTO USERTYPE (ID_UT, NAME_T) VALUES (2,'salesmanager');
INSERT INTO USERTYPE (ID_UT, NAME_T) VALUES (3,'superadmin');